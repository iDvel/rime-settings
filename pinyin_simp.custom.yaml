patch:
  switches:
    - name: ascii_mode
      reset: 0
      # states: [中文, 西文] # 永远不会切所以注释了
    - name: full_shape
      reset: 0
      # states: [半角, 全角] # 永远不会切所以注释了
    - name: ascii_punct
      reset: 0
      # states: [。，, ．，] # 永远不会切所以注释了
    - name: one-to-many
      reset: 1
    - name: traditionalization
      reset: 0 # 如果不想每次切换 App 都自动变成简体，可以注释这里
      states: [简, 繁繁繁]
  
  # 切换繁体快捷键
  key_binder/bindings/+:
    - {when: always, accept: Control+Shift+4, toggle: traditionalization}
    - {when: always, accept: Control+slash, toggle: traditionalization} # Ctrl + /
  
  # 八股文模型
  grammar:
    language: zh-hans-t-essay-bgw

  # 挂载主词库，在主词库中再挂载其他词库
  translator/dictionary: pinyin_simp.extended

  # custom_phrase
  engine/translators/@before 2: table_translator@custom_phrase
  custom_phrase:
    dictionary: ""
    user_dict: custom_phrase
    db_class: stabledb
    enable_completion: false
    enable_sentence: false
    initial_quality: 1

  # 动态日期、时间、星期
  engine/translators/@next: lua_translator@date_translator
  
  # 过滤器
  engine/filters:
    - simplifier@one-to-many
    - simplifier@traditionalize
    - uniquifier

  # one-to-many，参考emoji的设置，自己改成了一些符号的映射
  one-to-many:
    opencc_config: one-to-many.json
    option_name: one-to-many

  # 繁体
  traditionalize:
    opencc_config: s2t.json
    option_name: traditionalization
    tips: all # 简繁提示，注销掉可直接出繁

  # Easy English Nano
  schema/dependencies/@next: melt_eng
  engine/translators/@before 0: table_translator@melt_eng
  melt_eng:
    dictionary: melt_eng
    spelling_hints: 9
    enable_completion: true # 关闭后英文不会有提示，只会在打全时才会显示，体验不是很好
    enable_sentence: false
    # initial_quality 值为负数时，在能得到中文结果的情况下英文永远不会出现在第一个候选项。
    # 这里设置为 0，但同时会有单编码时被英文占据第一候选项的问题
    # 建议在 custom_phrase 中设置单编码固顶字来解决这个问题
    initial_quality: 0 # -3
  # 令英文输入方案响应大写字母（ Shift + [a-z] ）
  speller/alphabet: zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA

  speller/algebra:
    # 原装
    - abbrev/^([a-z]).+$/$1/
    - abbrev/^([zcs]h).+$/$1/ # 令 zh ch sh 响应单字而不是 z'h c'h s'h 这种的
    # 原装的 v u 容错转换
    - derive/^([nl])ue$/$1ve/
    - derive/^([jqxy])u/$1v/
    # 原装的模糊拼音
    - derive/un$/uen/
    - derive/ui$/uei/
    - derive/iu$/iou/ 
    # 原装自动纠错
    - derive/([aeiou])ng$/$1gn/ # agn → ang
    # - derive/([dtngkhrzcs])o(u|ng)$/$1o/ # do → dou|dong 
    - derive/([dtngkhrzcs])o(u)$/$1o/ # 改：do → dou
    - derive/ong$/on/ # lon → long  ton → tong ...
    - derive/ao$/oa/ # hoa → hao
    - derive/([iu])a(o|ng?)$/a$1$2/ # tain → tian  laing → liang  laio → liao
    # 自己的：
    - derive/ua$/au/ # shau → shua  hau → hua
    - derive/ian$/ina/ # tina → tian linag → liang
    - derive/([wrtypsdfghjklzcbnm])a([on])$/$1$2a/ # hoa → hao  gna  → gan
    - derive/([wtpsghkzcbnm])ai$/$1ia/ # zia → zai 不转换[lia, lai][dia, dai]这两个正确的拼写
    - derive/([zcs])hi$/$1ih/ # zih → zhi cih → chi sih → shi

  # “/” 模式转为 “v” 模式，并增加识别大写字母
  recognizer/patterns/punct: "^v([a-zA-Z]+|[0-9]0?)$" # "^/([a-z]+|[0-9]0?)$"
  
  punctuator:
    # 引入自己的 symbols，全部修改为了“v”模式
    import_preset: symbols.custom
  